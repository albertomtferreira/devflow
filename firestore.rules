rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // =====================================================================
    // DEBUGGING FUNCTION
    // This function simply returns the value passed to it. We use it
    // in a rule that is designed to fail, so the value shows up in the
    // error message in the browser's developer console.
    // =====================================================================
    function debug(value) {
      return value;
    }

    // =====================================================================
    // DEBUGGING RULE FOR PROJECTS
    // This rule will intentionally fail to let us see the variable values.
    // =====================================================================
    match /projects/{projectId} {
      // For single document reads (get)
      allow get: if isSignedIn(); // Keep this simple for now

      // For collection queries (list)
      // This rule will now ALWAYS fail and the error will contain a map of our debug values.
      allow list: if debug({
        auth_uid: request.auth.uid,
        query_userId: request.query.where.userId
      }) == false; // This comparison will always be false, forcing an error

      // Keep create simple while debugging list
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.userId;

      // Rules for subcollections can be added here later
    }

    // You can add more rules for other collections here.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
