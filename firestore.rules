
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for authenticated user
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Users can only read and write their own user document
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'projects' collection
    match /projects/{projectId} {
      // Allow reading a single project if the user is the owner.
      allow get: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // Allow listing projects ONLY if the query is filtered by the user's ID.
      // This is crucial for dashboard queries.
      allow list: if isSignedIn() && request.query.resource.data.userId == request.auth.uid;

      // Allow creating a project if the new document's userId matches the user's ID.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      
      // Allow updates and deletes only by the project owner.
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // Subcollection rules
      match /{collection}/{docId} {
        allow read, write: if isSignedIn() && get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid;
      }
    }
  }
}
